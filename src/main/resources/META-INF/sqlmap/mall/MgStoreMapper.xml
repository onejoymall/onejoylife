<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="mall.MgStoreMapper">
  <select id="getStoreList" parameterType="com.webapp.manager.vo.StoreVO" resultType="java.util.Map">
    select *,
      (select code.code_name from code where code.code='store_approval_status' and code.code_value=store.store_approval_status) as store_approval_status_name,
    (select product_file.file_link from product_file where product_file.key_id = store.store_id and product_file.file_order = 1) as file_1
    from store where 1=1
    <if test="searchKeyword!=null and searchKeyword!='' and searchType!=''">
      <foreach item="item" index="index" collection="searchTypeArr" separator=" OR " open="AND (" close=")">
        ${item} LIKE CONCAT('%', #{searchKeyword},'%' )
      </foreach>
    </if>
    <if test="store_approval_status != null and store_approval_status!=''">
      <foreach item="item" index="index" collection="store_approval_status_arr" separator=" OR " open="AND (" close=")">
        store_approval_status = #{item}
      </foreach>
    </if>
    <if test="start_date != null and start_date != ''"><![CDATA[AND store_approval_date >= #{start_date} ]]></if>
    <if test="end_date != null and end_date != ''"><![CDATA[AND store_approval_date < concat(#{end_date}, ' 23:59:59') ]]></if>
    <if test="orderByKey != null"> order by ${orderByKey} ${orderByValue}</if>
    <if test="orderByKey == null"> order by reg_date DESC </if>
    LIMIT ${rowStart-1}, ${displayRowCount}
  </select>
    <select id="getMgUserList" parameterType="com.webapp.manager.vo.StoreVO" resultType="java.util.Map">
        SELECT
            email as store_id,
            password as store_password,
            level as level,
            enable_mg_menu_id as enable_mg_menu_id,
            email_auth_status as status,
            reg_date
        FROM user A where A.email = #{store_id}
        UNION ALL
        SELECT
            store_id as store_id,
            store_password as store_password,
            level as level,
            enable_mg_menu_id as enable_mg_menu_id,
            store_approval_status as status,
            reg_date
        FROM store B where B.store_id = #{store_id}
    </select>
  <select id="getStoreListCount" parameterType="com.webapp.manager.vo.StoreVO" resultType="Integer">
    select IFNULL(count(*),0) as cnt
    from store where 1=1
    <if test="searchKeyword!=null and searchKeyword!='' and searchType!=''">
      <foreach item="item" index="index" collection="searchTypeArr" separator=" OR " open="AND (" close=")">
        ${item} LIKE CONCAT('%', #{searchKeyword},'%' )
      </foreach>
    </if>
    <if test="store_approval_status!=null and searchKeyword!='' and store_approval_status!=''">
      <foreach item="item" index="index" collection="store_approval_status_arr" separator=" OR " open="AND (" close=")">
        store_approval_status = #{item}
      </foreach>
    </if>
    <if test="start_date != null and start_date != ''"><![CDATA[AND store_approval_date >= #{start_date} ]]></if>
    <if test="end_date != null and end_date != ''"><![CDATA[AND store_approval_date < concat(#{end_date}, ' 23:59:59')]]></if>
  </select>
  <select id="getStoreDetail" parameterType="com.webapp.manager.vo.StoreVO" resultType="java.util.Map">
    select *,
    (select code.code_name from code where code.code='store_approval_status' and code.code_value=store.store_approval_status) as store_approval_status_name,
    (select product_file.file_link from product_file where product_file.key_id = store.store_id and product_file.file_order = 1) as file_1,
    (select product_file.file_name from product_file where product_file.key_id = store.store_id and product_file.file_order = 1) as file_name
    from store where store_id=#{store_id}
  </select>
  <select id="getStoreRegDetail" parameterType="com.webapp.manager.vo.StoreVO" resultType="java.util.Map">
    select *,
    (select code.code_name from code where code.code='store_approval_status' and code.code_value=store.store_approval_status) as store_approval_status_name,
    (select product_file.file_link from product_file where product_file.key_id = store.store_id and product_file.file_order = 1) as file_1
    from store where store_reg=#{store_reg}
  </select>
  <insert id="insertStore" parameterType="com.webapp.manager.vo.StoreVO">
    /*insertStore*/
      insert into store
      (
        store_id,
        supplier_cd,
        store_password,
        store_creator_yn,
        store_name,
        store_reg,
        store_ceo_name,
        store_type,
        store_item,
        store_online_reg,
        store_tel,
        store_mail,
        store_fax,
        postcode,
        roadAddress,
        jibunAddress,
        extraAddress,
        store_approval_status,
        tex_email,
        store_bank_account,
        store_bank_holder,
        store_bank_name,
        level,
        enable_mg_menu_id,
        info_alert_date,
        store_info_chkDate,
		store_pur_com
      )
      values
      (
        #{store_id},
        #{supplier_cd},
        #{store_password},
        #{store_creator_yn},
        #{store_name},
        #{store_reg},
        #{store_ceo_name},
        #{store_type},
        #{store_item},
        #{store_online_reg},
        #{store_tel},
        #{store_mail},
        #{store_fax},
        #{postcode},
        #{roadAddress},
        #{jibunAddress},
        #{extraAddress},
        #{store_approval_status},
        #{tex_email},
        #{store_bank_account},
        #{store_bank_holder},
        #{store_bank_name},
        #{level},
        #{enable_mg_menu_id},
        date_add(CURRENT_TIMESTAMP(), interval 3 MONTH),
        CURRENT_TIMESTAMP(),
        #{store_pur_com}
      )
    </insert>
  <update id="updateStore" parameterType="com.webapp.manager.vo.StoreVO">
      update store set
         store_name = #{store_name},
         store_creator_yn = #{store_creator_yn},
         store_reg = #{store_reg},
         store_ceo_name = #{store_ceo_name},
         store_type = #{store_type},
         store_item = #{store_item},
         store_online_reg = #{store_online_reg},
         store_tel = #{store_tel},
         store_mail = #{store_mail},
         store_fax = #{store_fax},
         postcode = #{postcode},
         roadAddress = #{roadAddress},
         jibunAddress = #{jibunAddress},
         extraAddress = #{extraAddress},
         tex_email=#{ tex_email},
         store_bank_account=#{ store_bank_account},
         store_bank_holder=#{ store_bank_holder},
         store_bank_name=#{ store_bank_name},
         enable_mg_menu_id = #{enable_mg_menu_id}
         where store_id = #{store_id}
    </update>
  <update id="updateStoreApproval" parameterType="com.webapp.manager.vo.StoreVO">
      update store set
         store_approval_date = now(),
         store_approval_status = #{store_approval_status}
         where store_id = #{store_id}
    </update>
</mapper>
