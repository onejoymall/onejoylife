<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="mall.DefinitionMapper">

    <select id="getDefinitionList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT A.*,B.*,
			if((SELECT Z.pd_category_upper_code FROM product_category Z WHERE Z.pd_category_id = B.pd_category_upper_code) != 0, (SELECT Z.pd_category_name FROM product_category Z WHERE Z.pd_category_id = (SELECT Z.pd_category_upper_code FROM product_category Z WHERE Z.pd_category_id = B.pd_category_upper_code)), NULL) AS up_up_code_name,
			if(B.pd_category_upper_code != 0, (SELECT Z.pd_category_name FROM product_category Z WHERE Z.pd_category_id = B.pd_category_upper_code), NULL) AS up_code_name,
			B.pd_category_name AS cur_code_name
        FROM product_definition A
        LEFT JOIN product_category B
        ON A.product_ct = B.pd_category_id
        where 1=1
        <if test="searchKeyword!=null and searchKeyword!='' and searchType!=''">
	      <foreach item="item" index="index" collection="searchTypeArr" separator=" OR " open="AND (" close=")">
	        ${item} LIKE CONCAT('%', #{searchKeyword},'%' )
	      </foreach>
	    </if>
	    <if test="start_date != null and start_date !=''"><![CDATA[AND A.reg_date >= date_format(#{start_date},'%y-%m-%d 00:00:00') ]]></if>
        <if test="end_date != null and end_date !=''"><![CDATA[AND A.reg_date <= date_format(date_add(#{end_date},interval 1 day),'%y-%m-%d 00:00:00') ]]></if>
        <if test="store_id != null and store_id !=''">and A.store_id = #{store_id}</if>
        <if test='category1 != null and category1 != ""'>
		    AND (
		    	product_ct = #{category1}
		    	OR product_ct = #{category2}
		    	OR product_ct = #{category3}
		    )
	    </if>
        order by A.reg_date desc 
		LIMIT ${rowStart-1}, ${displayRowCount}
    </select>
    <select id="getDefinitionCount" parameterType="java.util.HashMap" resultType="int">
        SELECT count(*) cnt
        FROM product_definition A
        where 1=1
        <if test="searchKeyword!=null and searchKeyword!='' and searchType!=''">
	      <foreach item="item" index="index" collection="searchTypeArr" separator=" OR " open="AND (" close=")">
	        ${item} LIKE CONCAT('%', #{searchKeyword},'%' )
	      </foreach>
	    </if>
	    <if test="start_date != null and start_date !=''"><![CDATA[AND A.reg_date >= date_format(#{start_date},'%y-%m-%d 00:00:00') ]]></if>
        <if test="end_date != null and end_date !=''"><![CDATA[AND A.reg_date <= date_format(date_add(#{end_date},interval 1 day),'%y-%m-%d 00:00:00') ]]></if>
        <if test="store_id != null and store_id !=''">and store_id = #{store_id}</if>
        <if test='category1 != null and category1 != ""'>
		    AND (
		    	product_ct = #{category1}
		    	OR product_ct = #{category2}
		    	OR product_ct = #{category3}
		    )
	    </if>
    </select>
    <select id="getDefinitionDetail" parameterType="hashmap" resultType="hashmap">
		SELECT A.*,B.*,
				if((SELECT Z.pd_category_upper_code FROM product_category Z WHERE Z.pd_category_id = B.pd_category_upper_code) != 0, (SELECT Z.pd_category_upper_code FROM product_category Z WHERE Z.pd_category_id = B.pd_category_upper_code), NULL) AS up_up_code,
				if(B.pd_category_upper_code != 0, B.pd_category_upper_code, NULL) AS up_code,
				B.pd_category_id AS cur_code
				
		FROM product_definition A
		LEFT JOIN product_category B
		ON A.product_ct = B.pd_category_id
		WHERE A.product_definition_id = #{product_definition_id}
    </select> 
    <insert id="insertDefinition" parameterType="hashmap">
    	insert into product_definition(
    		store_id,
    		product_ct,
    		product_definition_key,
    		product_definition_value
    	)values(
    		#{store_id},
    		#{product_ct},
    		#{product_definition_key},
    		#{product_definition_value}
    	)
    </insert>
    <update id="updateDefinition" parameterType="hashmap">
    	update product_definition set
    		store_id = #{store_id},
    		product_ct = #{product_ct},
    		product_definition_key = #{product_definition_key},
    		product_definition_value = #{product_definition_value},
    		update_date = sysdate()
    	where product_definition_id = #{product_definition_id}
    </update>
</mapper>
